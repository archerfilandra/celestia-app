name: dependabot-tidy

on:
  pull_request:
    branches: [main]
    paths:
      - '**/go.mod'
      - '**/go.sum'

permissions:
  contents: write
  pull-requests: write

jobs:
  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 #v6.0.0
        with:
          go-version-file: "go.mod"

      - name: Run go mod tidy in all modules
        run: |
          find . -name 'go.mod' -execdir sh -c '
            echo "Running go mod tidy in $(pwd)"
            go mod tidy
          ' \;

      - name: Create follow-up tidy PR (separate branch, keep dependabot branch clean)
        if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git add .
          if git diff --cached --quiet; then
            echo "No changes after go mod tidy."
            exit 0
          fi

          # Configure author for the auxiliary commit
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          DEP_BRANCH="${{ github.head_ref }}"
          TIDY_BRANCH="auto/tidy-${DEP_BRANCH}"

          echo "Creating branch ${TIDY_BRANCH} from dependabot branch ${DEP_BRANCH}"
          git checkout -b "${TIDY_BRANCH}"

          git commit -m "chore(tidy): run go mod tidy (follow-up to #${{ github.event.pull_request.number }})"
          git push origin "${TIDY_BRANCH}"

          TITLE="chore(tidy): follow-up for #${{ github.event.pull_request.number }}"
          BODY="This PR contains go mod tidy changes produced on top of the Dependabot update.\n\nNotes:\n- Created from a separate auxiliary branch to keep the Dependabot branch untouched.\n- Keeps @dependabot rebase available on the original PR."

          echo "Opening follow-up PR from ${TIDY_BRANCH} into ${BASE_BRANCH}"
          PR_CREATE_PAYLOAD=$(jq -n --arg title "$TITLE" --arg head "$TIDY_BRANCH" --arg base "$BASE_BRANCH" --arg body "$BODY" '{title:$title, head:$head, base:$base, body:$body}')
          PR_RESPONSE=$(curl -sS -X POST \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d "$PR_CREATE_PAYLOAD")

          echo "$PR_RESPONSE" | jq -r '.html_url // "(no url)"'
